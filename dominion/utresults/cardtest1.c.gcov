        -:    0:Source:tests/cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include "../dominion.h"
        -:    3:
        -:    4:// Card Test 1 - Smithy 
        -:    5:
        -:    6:int failed = 0;
        -:    7:
        1:    8:void assertTF(int b, char *msg){
        1:    9:  if (b == 0){
    #####:   10:    printf("FAILED ASSERTION: %s\n", msg);
    #####:   11:    failed = 1;
        -:   12:  }
        1:   13:}
        -:   14:
        1:   15:void checkasserts(){
        1:   16:  if (!failed){
        1:   17:    printf("TEST SUCCESSFULLY COMPLETED\n");
        -:   18:  }
        1:   19:}
        -:   20:
        1:   21:int main(){
        -:   22:  struct gameState g;
        1:   23:  int k[10] = {smithy, adventurer, gardens, embargo, cutpurse, mine, ambassador,
        -:   24:            outpost, baron, tribute};
        -:   25:
        1:   26:  int choice1 = 0;
        1:   27:  int choice2 = 0;
        1:   28:  int choice3 = 0;
        1:   29:  int handPos = 0;
        -:   30:
        1:   31:  initializeGame(2, k, 5, &g);
        1:   32:  g.hand[0][0] = smithy;
        1:   33:  g.whoseTurn = 0;
        -:   34:  
        1:   35:  int num = numHandCards(&g);
        -:   36:
        1:   37:  playCard(handPos, choice1, choice2, choice3, &g);
        -:   38:
        1:   39:  int numa = numHandCards(&g);
        -:   40:  
        -:   41:  // Smithy adds 3 cards to the hand, but remove card after playing
        1:   42:  assertTF(numa = num + 2, "Smithy played\n");
        -:   43:
        1:   44:  checkasserts();
        -:   45:}
